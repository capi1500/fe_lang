fn apply(f: Fn(&mut [i32]), row: &mut [i32]) {
	f(row);
}

fn print_row(row: &mut [i32]) {
	var i = 0;
	while (i < length_i32(row)) {
		print_i32(row[i]);
		print_string("\t");
		i += 1;
	}
	print_char('\n');
}

fn insert_row(row: &mut [i32]) {
	var i = 0;
	while (i < length_i32(row)) {
		row[i] = input_i32();
		i += 1;
	}
}

fn main() {
	print_string("input number of rows n and columns m, then (n x m) numbers\n");
	const n = input_i32();
	const m = input_i32();
	var tab = [n;[m;0]];
	var i = 0;
	while (i < n) {
		apply(insert_row, &mut tab[i]);
		i += 1;
	}
	i = 0;
	while (i < n) {
		apply(print_row, &mut tab[i]);
		i += 1;
	}
}
